Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 10000 (id)
vi. Checkin = 493 (business_id)
vii. Photo = 6493 (business_id)
viii. Tip = 537 (user_id)
ix. User = 10000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	
	SELECT COUNT(*)
	FROM user
	WHERE id IS NULL
		OR name IS NULL
		OR review_count IS NULL
		OR yelping_since IS NULL
		OR useful IS NULL
		OR funny IS NULL
		OR cool IS NULL
		OR fans IS NULL
		OR average_stars IS NULL
		OR compliment_hot IS NULL
		OR compliment_more IS NULL
		OR compliment_profile IS NULL
		OR compliment_cute IS NULL
		OR compliment_list IS NULL
		OR compliment_note IS NULL
		OR compliment_plain IS NULL
		OR compliment_cool IS NULL
		OR compliment_funny IS NULL
		OR compliment_writer IS NULL
		OR compliment_photos IS NULL;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT city
		,sum(review_count) AS Review_sum
	FROM business
	GROUP BY city
	ORDER BY Review_sum DESC;
	
	Copy and Paste the Result Below:
+-----------------+------------+
| city            | Review_sum |
+-----------------+------------+
| Las Vegas       |      82854 |
| Phoenix         |      34503 |
| Toronto         |      24113 |
| Scottsdale      |      20614 |
| Charlotte       |      12523 |
| Henderson       |      10871 |
| Tempe           |      10504 |
| Pittsburgh      |       9798 |
| Montréal        |       9448 |
| Chandler        |       8112 |
| Mesa            |       6875 |
| Gilbert         |       6380 |
| Cleveland       |       5593 |
| Madison         |       5265 |
| Glendale        |       4406 |
| Mississauga     |       3814 |
| Edinburgh       |       2792 |
| Peoria          |       2624 |
| North Las Vegas |       2438 |
| Markham         |       2352 |
| Champaign       |       2029 |
| Stuttgart       |       1849 |
| Surprise        |       1520 |
| Lakewood        |       1465 |
| Goodyear        |       1155 |
+-----------------+------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars AS star_rating
	,sum(review_count) AS count
FROM business
WHERE city == 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         1.5 |    10 |
|         2.5 |     6 |
|         3.5 |    88 |
|         4.0 |    21 |
|         4.5 |    31 |
|         5.0 |     3 |
+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT stars AS star_rating
	,sum(review_count) AS count
FROM business
WHERE city == 'Beachwood'
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------------+-------+
| star_rating | count |
+-------------+-------+
|         2.0 |     8 |
|         2.5 |     3 |
|         3.0 |    11 |
|         3.5 |     6 |
|         4.0 |    69 |
|         4.5 |    17 |
|         5.0 |    23 |
+-------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT name
	,review_count AS review_count
FROM user
ORDER BY review_count DESC Limit 3
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	No obvious correlation exists.  For example, eric has many reviews but few fans.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	There are more reviews with the word "love"
	
	SQL code used to arrive at answer:
SELECT count(*)
FROM review
WHERE TEXT LIKE '%love%'
+----------+
| count(*) |
+----------+
|     1780 |
+----------+

SELECT count(*) 
FROM review
where text LIKE '%hate%'
+----------+
| count(*) |
+----------+
|      232 |
+----------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name
	,fans
FROM user
ORDER BY fans DESC Limit 10;	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

SELECT b.name
	,b.city
	,c.category
	,b.stars
FROM business b
INNER JOIN category c ON c.business_id = b.id
WHERE c.category LIKE 'Restaurants'
	AND city LIKE 'Toronto'
GROUP BY b.stars;

	
i. Do the two groups you chose to analyze have a different distribution of hours?

-> While some restaurants which are highly ranked (4.0-4.5 stars) open at 11:00, others open at 18:00 (at least on Saturdays*). In contrast, those reastaurants with a lower star rating (2.0-3.0) open almost at the same time (10:00-11:00). 
* Here is data are grouped by star rating, therefore only opening hours for Saturday are shown. Opening hours might be different for other days of the week. For the simplicity of the analysis I don't show data for other days of the week.


+---------------+---------+-------------+-------+----------------------+
| name          | city    | category    | stars | hours                |
+---------------+---------+-------------+-------+----------------------+
| 99 Cent Sushi | Toronto | Restaurants |   2.0 | Saturday|11:00-23:00 |
| Pizzaiolo     | Toronto | Restaurants |   3.0 | Saturday|10:00-4:00  |
| Edulis        | Toronto | Restaurants |   4.0 | Saturday|18:00-23:00 |
| Sushi Osaka   | Toronto | Restaurants |   4.5 | Saturday|11:00-23:00 |
+---------------+---------+-------------+-------+----------------------+


SELECT b.name
	,b.city
	,c.category
	,b.stars
	,h.hours
FROM business b
INNER JOIN category c ON c.business_id = b.id
INNER JOIN hours h ON h.business_id = b.id
WHERE c.category LIKE 'Restaurants'
	AND city LIKE 'Toronto'
GROUP BY b.stars;


ii. Do the two groups you chose to analyze have a different number of reviews?
      
-> Yes, they do. Highly-ranked restaurants with 4.0 stars have a higher number of reviews than low-ranked ones (89 reviews for 4.0-star restaurants vs. 5 reviews for low-ranked ones).	However, it is not always the
case that highly-ranked restaurants receive more reviews: i.e. 4.5-star restaurant(s) has 17 reviews only.  
	  
+---------+-------------+-------+----------------------+---------------------+
| city    | category    | stars | hours                | avg(b.review_count) |
+---------+-------------+-------+----------------------+---------------------+
| Toronto | Restaurants |   2.0 | Saturday|11:00-23:00 |                 5.0 |
| Toronto | Restaurants |   3.0 | Saturday|10:00-4:00  |                40.5 |
| Toronto | Restaurants |   4.0 | Saturday|18:00-23:00 |                89.0 |
| Toronto | Restaurants |   4.5 | Saturday|11:00-23:00 |                17.0 |
+---------+-------------+-------+----------------------+---------------------+

SELECT b.city
	,c.category
	,b.stars
	,h.hours
	,avg(b.review_count)
FROM business b
INNER JOIN category c ON c.business_id = b.id
INNER JOIN hours h ON h.business_id = b.id
WHERE c.category LIKE 'Restaurants'
	AND b.city LIKE 'Toronto'
GROUP BY b.stars;
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

-> It was not possible to make any inference based on the location data (address, neighborhood, etc.)

SELECT b.city
	,c.category
	,b.stars
	,h.hours
	,b.review_count
    ,b.address
    ,b.neighborhood
FROM business b
INNER JOIN category c ON c.business_id = b.id
INNER JOIN hours h ON h.business_id = b.id
WHERE c.category LIKE 'Restaurants'
	AND b.city LIKE 'Toronto'
GROUP BY b.stars;	

+---------+-------------+-------+----------------------+--------------+-----------------------+------------------------+
| city    | category    | stars | hours                | review_count | address               | neighborhood           |
+---------+-------------+-------+----------------------+--------------+-----------------------+------------------------+
| Toronto | Restaurants |   2.0 | Saturday|11:00-23:00 |            5 | 389 Church Street     | Downtown Core          |
| Toronto | Restaurants |   3.0 | Saturday|10:00-4:00  |           34 | 270 Adelaide Street W | Entertainment District |
| Toronto | Restaurants |   4.0 | Saturday|18:00-23:00 |           89 | 169 Niagara Street    | Niagara                |
| Toronto | Restaurants |   4.5 | Saturday|11:00-23:00 |            8 | 5084 Dundas Street W  | Etobicoke              |
+---------+-------------+-------+----------------------+--------------+-----------------------+------------------------+

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
Average number of reviews for those restaurants which are closed is lower than for those which are open (23.20 vs. 31.76).         
         
ii. Difference 2:
The same tendency can be seen here: average number of stars for those restaurants which are closed is lower than for those which are open (3.52 vs. 3.68).           
         
         
SELECT avg(review_count)
	,avg(stars)
	,is_open
FROM business b
GROUP BY b.is_open;

+-------------------+---------------+---------+
| avg(review_count) |    avg(stars) | is_open |
+-------------------+---------------+---------+
|     23.1980263158 | 3.52039473684 |       0 |
|     31.7570754717 | 3.67900943396 |       1 |
+-------------------+---------------+---------+	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
-> predicting the overall star rating for a business         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
I would choose such data as: 
(1) city (same reason as for neighborhood)
(2) stars (I need these data as the target variable)
(3) review_count (obviously there can be influence of number of restaurant reviews on the star rating. Probably more reviews increase rating)
(4) is_open (there can be influence of a restaurant status on the star rating. The restaurants with high ratings are open due to their popularity/customer satisfaction. In other words, customers are satisfied with restaurants. They give restaurants high ratings, therefore they are still open. The restaurants with low ratings were closed due to their unpopularity/dislike.)                          
(5) hours (opening hours may be important for predicting the overall star rating. Those which have longer working hours may have a higher rating. The observations that will be used for prediction should be preprocessed)
(6) category (i.e. category Restaurants can receive an above average rating due to normally good customer service in restaurants)
(7) the list is not exhaustive
                
iii. Output of your finished dataset:
+-------+-----------+--------------+---------+-----------------------+--------------+
| stars | city      | review_count | is_open | hours                 | category     |
+-------+-----------+--------------+---------+-----------------------+--------------+
|   3.0 | Markham   |           25 |       1 | Monday|12:00-23:00    | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Tuesday|12:00-23:00   | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Friday|12:00-23:00    | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Wednesday|12:00-23:00 | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Thursday|12:00-23:00  | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Sunday|12:00-23:00    | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Saturday|12:00-23:00  | Asian Fusion |
|   3.0 | Markham   |           25 |       1 | Monday|12:00-23:00    | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Tuesday|12:00-23:00   | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Friday|12:00-23:00    | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Wednesday|12:00-23:00 | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Thursday|12:00-23:00  | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Sunday|12:00-23:00    | Restaurants  |
|   3.0 | Markham   |           25 |       1 | Saturday|12:00-23:00  | Restaurants  |
|   3.5 | Charlotte |            8 |       1 | Monday|9:00-19:00     | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Tuesday|9:00-19:00    | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Friday|9:00-19:00     | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Wednesday|9:00-19:00  | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Thursday|9:00-19:00   | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Saturday|9:00-17:00   | Electronics  |
|   3.5 | Charlotte |            8 |       1 | Monday|9:00-19:00     | Shopping     |
|   3.5 | Charlotte |            8 |       1 | Tuesday|9:00-19:00    | Shopping     |
|   3.5 | Charlotte |            8 |       1 | Friday|9:00-19:00     | Shopping     |
|   3.5 | Charlotte |            8 |       1 | Wednesday|9:00-19:00  | Shopping     |
|   3.5 | Charlotte |            8 |       1 | Thursday|9:00-19:00   | Shopping     |
+-------+-----------+--------------+---------+-----------------------+--------------+
(Output limit exceeded, 25 of 3065 total rows shown)
        
         
iv. Provide the SQL code you used to create your final dataset:

SELECT b.stars
	,b.city
	,b.review_count
	,b.is_open
	,h.hours
	,c.category
FROM business b
INNER JOIN category c ON c.business_id = b.id
INNER JOIN hours h ON h.business_id = b.id;
